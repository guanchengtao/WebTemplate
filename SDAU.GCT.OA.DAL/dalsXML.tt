<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".xml"#><#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\SDAU.GCT.OA.Model\\Model1.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net">

  <!--<object name="DbSessionFactory" type="SDAU.GCT.OA.DALFactory.DbSessionFactory,SDAU.GCT.OA.DALFactory"
      singleton="true">-->
  <!--Spring.Net通过工厂的实例方法来创建对象配置demo-->
  <!--</object>
  <object name="DbSession"
          type="SDAU.GCT.OA.DALFactory.DbSession,SDAU.GCT.OA.DALFactory"
          singleton="false" 
          factory-method="GetCurrentSession"
          factory-object="DbSessionFactory" >
  </object>-->

  <!--Spring.Net通过工厂的一个静态方法来创建对象配置demo type直接配置到工厂类型就可以了-->
  <object name="DbSession"
        type="SDAU.GCT.OA.DALFactory.DbSessionFactory,SDAU.GCT.OA.DALFactory"
        singleton="false"
        factory-method="GetCurrentSession" >
  </object>


<#foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{#>	

	   <object name="<#=entity.Name#>Dal"
    type="SDAU.GCT.OA.DAL.<#=entity.Name#>Dal,SDAU.GCT.OA.DAL"
    singleton="false">
  </object>
<#}#>
</objects>
